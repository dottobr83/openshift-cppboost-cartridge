#!/bin/bash -e

source $OPENSHIFT_CARTRIDGE_SDK_BASH

cartridge_type="cpp"


function isrunning() {
# Check for running app
	pid=$(ps -ef | grep "[_]exec" | awk '{print $2}')
	if [ "$pid" != "" ]; then
		return 0
	else
		return 1
	fi
}

# Check if the server http port is up
function ishttpup() {
	echo "Is HTTP up?"
}

function build() {
    echo "Building boost"
    curl 'http://ufpr.dl.sourceforge.net/project/boost/boost/1.57.0/boost_1_57_0.tar.gz' -H 'Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8' -H 'Connection: keep-alive' -H 'DNT: 1' -H 'Accept-Encoding: gzip, deflate, sdch' -H 'Accept-Language: en-US,en;q=0.8,en-GB;q=0.6,pt-BR;q=0.4,pt;q=0.2,fr;q=0.2,es-419;q=0.2,es;q=0.2' -H 'User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.99 Safari/537.36' --compressed -o boost_1_57_0.tar.gz
    tar zxvf boost_1_57_0.tar.gz  -C $OPENSHIFT_HOMEDIR
    export BOOST_ROOT=$OPENSHIFT_HOMEDIR/boost_1_57_0
    pushd $BOOST_ROOT
    mkdir -p $OPENSHIFT_HOMEDIR/usr/local/
    ./bootstrap.sh --prefix=$OPENSHIFT_HOMEDIR/usr/local/
    ./b2 install
    popd
    echo "Building $cartride_type cart"
    #pushd ${OPENSHIFT_REPO_DIR}
}

function deploy() {
  echo "Deploying $cartridge_type cart"

}

function start() {
  echo "Starting $cartridge_type cart"
  echo `date` >> ${OPENSHIFT_DATA_DIR}test.log
  echo "executing script" >> ${OPENSHIFT_DATA_DIR}test.log
  if [ -e ${OPENSHIFT_REPO_DIR}${OPENSHIFT_APP_NAME}_exec ]
  then
    ${OPENSHIFT_REPO_DIR}${OPENSHIFT_APP_NAME}_exec 2>&1 >> ${OPENSHIFT_LOG_DIR}${OPENSHIFT_APP_NAME}.log &
  else 
	  build
	  start
  fi

}


function stop() {
  echo "Stopping $cartridge_type cart"
  if isrunning
  then
	  pid=$(ps -ef | grep "[_]exec" | awk '{print $2}')
	  echo "Sending SIGTERM to papertrailapp:$pid ..." 1>&2
	  kill $pid
  fi
 
}

function restart() {
    echo "Restarting $cartridge_type cart"

    stop

    start
}

function status() {
   if isrunning
   then
      client_result "Application is running"
   else
      client_result "Application is either stopped or inaccessible"
   fi
}

function reload() {
    echo "Reloading $cartridge_type cart"
    restart
}

# Clean up any log files
function tidy() {
  client_message "Emptying log dir: $OPENSHIFT_CPP_LOG_DIR"
  shopt -s dotglob
  rm -rf $OPENSHIFT_CPP_LOG_DIR/*
}

case "$1" in
  build)           build ;;
  deploy)          deploy ;;
  start)           start ;;
  stop)            stop ;;
  restart)         restart ;;
  status)          status ;;
  reload)          reload ;;
  tidy)            tidy ;;
  *)               exit 0
esac

